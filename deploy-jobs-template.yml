parameters:
  - name: environment
    type: string
    default: Dev
  - name: location
    type: string
    default: 'uksouth'
  - name: azureSubscription
    type: string
    default: 'App Services DevOps NonProd'
  - name: method
    type: string
    default: 'GET'
  - name: retries
    type: number
    default: 5
  - name: secondsDelay
    type: number
    default: 10
  - name: timeoutSec
    type: number
    default: 120
  - name: calcengineApiZipFile
    type: string
    default: 'Insolvency.CalculationsEngine.Redundancy.API.zip'
  - name: appInsightsConnectionString
    type: string

jobs:
  - deployment: 
    environment: ${{ parameters.environment }}
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureRmWebAppDeployment@4
            displayName: Azure Web App Deploy
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: ${{ parameters.azureSubscription }}
              appType: 'webApp'
              WebAppName: 'app-${{ parameters.location }}-${{ lower(parameters.environment) }}-ce-calcengine'
              resourceGroupName: 'rg-${{ parameters.location }}-${{ lower(parameters.environment) }}-calcengine'
              package: '$(Pipeline.Workspace)/**/${{ parameters.calcengineApiZipFile }}'
              deployToSlotOrASE: true
              slotName: 'staging'
              appSettings: >
                -APPLICATIONINSIGHTS_CONNECTION_STRING ${{ parameters.appInsightsConnectionString }}

          - task: AzureAppServiceSettings@1
            displayName: Apply App Service Settings
            inputs:
              azureSubscription: ${{ parameters.azureSubscription }}
              appName: 'app-${{ parameters.location }}-${{ lower(parameters.environment) }}-ce-calcengine'
              slotName: 'staging'
              appSettings: |
                [
                  {
                      "name": "Environment",
                      "value": "${{ parameters.environment }}",
                      "slotSetting": false
                  }
                ]

          - task: AzureAppServiceManage@0
            displayName: Start Staging Slot
            inputs:
              azureSubscription: ${{ parameters.azureSubscription }}
              Action: 'Start Azure App Service'
              WebAppName: 'app-${{ parameters.location }}-${{ lower(parameters.environment) }}-ce-calcengine'
              resourceGroupName: 'rg-${{ parameters.location }}-${{ lower(parameters.environment) }}-calcengine'
              SpecifySlotOrASE: true
              Slot: 'staging'
              
          - task: AzureAppServiceManage@0
            displayName: Start Production Slot
            inputs:
              azureSubscription: ${{ parameters.azureSubscription }}
              Action: 'Start Azure App Service'
              WebAppName: 'app-${{ parameters.location }}-${{ lower(parameters.environment) }}-ce-calcengine'
              resourceGroupName: 'rg-${{ parameters.location }}-${{ lower(parameters.environment) }}-calcengine'
              SpecifySlotOrASE: true
              Slot: 'Production'

          - checkout: inss-devops-common-lib

##           - script: |
##               bash $(System.DefaultWorkingDirectory)/bash/curl_url_with_retry.sh \
##                 "https://app-${{ parameters.location }}-${{ lower(parameters.environment) }}-ce-calcengine-staging.azurewebsites.net/pinggetba" \
##                 "${{ parameters.method }}" ${{ parameters.retries }} ${{ parameters.secondsDelay }} ${{ parameters.timeoutSec }}
##             displayName: 'Performing Health Check - Staging'

          - task: PowerShell@2
            displayName: 'Performing Health Check - Staging'
            inputs:
              failOnStderr: true
              targetType: 'filePath'
              filePath: $(System.DefaultWorkingDirectory)/powershell/InvokeRequestWithRetry.ps1
              arguments: > # Use this to avoid newline characters in multi-line string
                -URI "https://app-${{ parameters.location }}-${{ lower(parameters.environment) }}-ce-calcengine-staging.azurewebsites.net/api/health/ping"
                -Method "${{ parameters.method }}"
                -Retries ${{ parameters.retries }}
                -SecondsDelay ${{ parameters.secondsDelay }}
                -TimeoutSec ${{ parameters.timeoutSec }}
            
          - task: AzureAppServiceManage@0
            displayName: Swap Staging Slot into Production
            inputs:
              azureSubscription: ${{ parameters.azureSubscription }}
              Action: 'Swap Slots'
              WebAppName: 'app-${{ parameters.location }}-${{ lower(parameters.environment) }}-ce-calcengine'
              resourceGroupName: 'rg-${{ parameters.location }}-${{ lower(parameters.environment) }}-calcengine'
              SourceSlot: 'staging'
              SwapWithProduction: true

##          - task: PowerShell@2
##            displayName: 'Performing Health Check - Production'
##            inputs:
##              failOnStderr: true
##              targetType: 'filePath'
##              filePath: $(System.DefaultWorkingDirectory)/powershell/InvokeRequestWithRetry.ps1
##              arguments: > # Use this to avoid newline characters in multi-line string
##                -URI "https://app-${{ parameters.location }}-${{ lower(parameters.environment) }}-ce-calcengine.azurewebsites.net/api/health/ping"
##                -Method "${{ parameters.method }}"
##                -Retries ${{ parameters.retries }}
##                -SecondsDelay ${{ parameters.secondsDelay }}
##                -TimeoutSec ${{ parameters.timeoutSec }}

          - task: AzureAppServiceManage@0
            displayName: Stop Staging Slot
            inputs:
              azureSubscription: ${{ parameters.azureSubscription }}
              Action: 'Stop Azure App Service'
              WebAppName: 'app-${{ parameters.location }}-${{ lower(parameters.environment) }}-ce-calcengine'
              resourceGroupName: 'rg-${{ parameters.location }}-${{ lower(parameters.environment) }}-calcengine'
              SpecifySlotOrASE: true
              Slot: 'staging'

